voice = update.message.voice
    if not voice:
        await update.message.reply_text("–ù–µ –Ω–∞—à—ë–ª –≥–æ–ª–æ—Å–æ–≤–æ–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ ü§î")
        return

    tg_file = await context.bot.get_file(voice.file_id)
    with tempfile.NamedTemporaryFile(suffix=".ogg", delete=False) as tmp:
        tmp_path = tmp.name
    await tg_file.download_to_drive(tmp_path)

    try:
        with open(tmp_path, "rb") as f:
            tr = openai_client.audio.transcriptions.create(
                model="whisper-1",
                file=f,
                response_format="text",
            )
        text = tr.strip() if isinstance(tr, str) else str(tr).strip()
        if not text:
            await update.message.reply_text("–ù–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ üôè")
            return
        # –ü–æ–¥–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∏ –ø—É—Å–∫–∞–µ–º –≤ –æ–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        update.message.text = text
        await handle_text(update, context)
    except Exception as e:
        log.exception("Whisper error")
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}")
    finally:
        try:
            os.remove(tmp_path)
        except Exception:
            pass

# ----------------------------- MAIN ----------------------------
def main():
    token = os.getenv("BOT_TOKEN")
    if not token:
        raise SystemExit("–ù–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")

    # –ø–æ–¥–Ω–∏–º–∞–µ–º HTTP keep-alive (—á—Ç–æ–±—ã Render –≤–∏–¥–µ–ª –ø–æ—Ä—Ç)
    threading.Thread(target=run_flask, daemon=True).start()

    application = Application.builder().token(token).build()

    # –•—ç–Ω–¥–ª–µ—Ä—ã
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.VOICE, handle_voice))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

    log.info("Starting bot with polling‚Ä¶")
    # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –±—ã–ª –≤—Ç–æ—Ä–æ–π –∏–Ω—Å—Ç–∞–Ω—Å ‚Äî Telegram –æ—Ç–¥–∞—Å—Ç Conflict. –ó–¥–µ—Å—å –ø—Ä–æ—Å—Ç–æ —É–ø–∞–¥—ë–º –≤ –ª–æ–≥–∏,
    # –ø–æ—ç—Ç–æ–º—É —Å–ª–µ–¥–∏, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª –û–î–ò–ù —Å–µ—Ä–≤–∏—Å –Ω–∞ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω.
    application.run_polling(close_loop=False)

if __name__ == "__main__":
    main()
